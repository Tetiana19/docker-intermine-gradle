# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  branches:
    include:
    - master

resources:
- repo: self

variables:
  buildConfiguration: 'Release'
  ServiceConnnectionName: 'Tailspin.SpaceGame.Web.Full'
  tag: '$(Build.BuildId)'
  group: Release2

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: Docker@2
      displayName: Build an image
      inputs:
        command: build
        dockerfile: '$(Build.SourcesDirectory)/intermine_builder/Dockerfile'
        tags: |
          $(tag)


    steps:
    - script: |
        # Exit when any command returns a failure status.
        set -e
        # Write terraform.tfvars.
        echo 'resource_group_location = "'$(ResourceGroupLocation)'"' | tee terraform.tfvars
        # Write backend.tfvars.
        echo 'resource_group_name = "tf-storage-rg"' | tee backend.tfvars
        echo 'storage_account_name = "'$(StorageAccountName)'"' | tee -a backend.tfvars
        echo 'container_name = "tfstate"' | tee -a backend.tfvars
        echo 'key = "terraform.tfstate"' | tee -a backend.tfvars
        # Initialize Terraform.
        terraform init -input=false -backend-config="backend.tfvars"
        # Apply the Terraform plan.
        terraform apply -input=false -auto-approve
        # Get the App Service name for the dev environment.
        WebAppNameDev=$(terraform output --raw appservice_name)
        # Write the WebAppNameDev variable to the pipeline.
        echo "##vso[task.setvariable variable=WebAppNameDev;isOutput=true]$WebAppNameDev"
      name: 'RunTerraform'
      displayName: 'Run Terraform'
      env:
        ARM_CLIENT_ID: $(ARM_CLIENT_ID)
        ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
        ARM_TENANT_ID: $(ARM_TENANT_ID)
        ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
